name: Build & E2E Tests

on:
  push:
    branches: [main, "test_branch", "auto-e2e/**"]
  pull_request:

jobs:
  build-deploy-e2e:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Prepare or validate demo_test_branch
        working-directory: ./test-generator
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

          echo "üîç Checking if demo_test_branch exists on remote..."
          if git ls-remote --exit-code --heads origin demo_test_branch; then
            echo "‚úÖ demo_test_branch exists. Fetching and checking it out..."
            git fetch origin demo_test_branch
            if git checkout demo_test_branch; then
              echo "‚úÖ Checked out demo_test_branch."
            else
              echo "‚ùå Failed to checkout demo_test_branch. Cleaning up and exiting."
              git branch -D demo_test_branch || true
              exit 1
            fi
          else
            echo "‚ÑπÔ∏è test_branch does not exist. Creating it from current state."
            git checkout -b demo_test_branch
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      ####################################
      # üß± Build and Deploy React App
      ####################################
      - name: Install React app deps
        working-directory: ./react-app
        run: npm ci --legacy-peer-deps

      - name: Build React app
        working-directory: ./react-app
        run: npm run build

      - name: Configure Git identity
        working-directory: ./react-app
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Deploy to GitHub Pages
        working-directory: ./react-app
        run: npm run deploy

      ####################################
      # üß™ Generate and Run E2E Tests
      ####################################

      - name: Debug folder structure
        run: ls -R

      - name: Install test-generator deps
        working-directory: ./test-generator
        run: npm ci --legacy-peer-deps

      - name: Install Playwright Browsers
        working-directory: ./test-generator
        run: npx playwright install --with-deps

      - name: Generate Playwright specs
        id: run-tests
        working-directory: ./test-generator
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        continue-on-error: true
        run: npm run gen_test

      
      # - name: Run Playwright tests headlessly
      #   working-directory: ./test-generator
      #   run: npm run test:e2e

      ####################################
      # üì¶ Upload Playwright Report
      ####################################
      # - name: Upload HTML Report
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: playwright-report
      #     path: test-generator/test-results/
      
      ####################################
      # üìù Commit New Specs to Branch
      ####################################
      - name: Commit and push to test_branch
        if: steps.run-tests.outcome == 'success'
        working-directory: ./test-generator
        run: |
          git add end2end/specs/
          git commit -m "Add generated E2E test specs" || echo "No changes to commit"
          git push origin test_branch
      
      - name: Clean up failed test_branch
        if: steps.run-tests.outcome == 'failure'
        working-directory: ./test-generator
        run: |
          git add end2end/specs/
          git commit -m "Add generated E2E test specs" || echo "No changes to commit"
          git push origin test_branch
        # run: |
        #   echo "‚ùå Tests failed. Cleaning up local test_branch (not pushing)."
        #   git checkout main  # or previous branch
        #   git branch -D test_branch || true
      

      # - name: Commit generated specs to test_branch
      #   if: steps.run-tests.outcome == 'success'
      #   working-directory: ./test-generator
      #   run: |
      #     git config --global user.email "action@github.com"
      #     git config --global user.name "GitHub Action"
      #     git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      #     # Check if branch exists on remote
      #     if git ls-remote --exit-code --heads origin test_branch; then
      #       echo "Branch test_branch already exists. Checking it out."
      #       git fetch origin test_branch
      #       git checkout test_branch
      #     else
      #       echo "Branch test_branch does not exist. Creating it."
      #       git checkout -b test_branch
      #     fi

      #     git add end2end/specs/
      #     git commit -m "Add generated E2E test specs" || echo "No changes to commit"
      #     git push origin test_branch
     